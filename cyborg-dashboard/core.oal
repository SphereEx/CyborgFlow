/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// normal server
cyborg_flow_normal_service_resp_time = from(Service.latency).filter(tags not contain "cyborg-flow:true").longAvg();
cyborg_flow_normal_service_cpm = from(Service.*).filter(tags not contain "cyborg-flow:true").cpm();
cyborg_flow_normal_service_sla = from(Service.*).filter(tags not contain "cyborg-flow:true").percent(status == true);
cyborg_flow_normal_service_percentile = from(Service.latency).filter(tags not contain "cyborg-flow:true").percentile(10);
cyborg_flow_normal_service_heatmap = from(Service.latency).filter(tags not contain "cyborg-flow:true").histogram(100, 20);

// cyborg flow server
cyborg_flow_generate_service_resp_time = from(Service.latency).filter(tags contain "cyborg-flow:true").longAvg();
cyborg_flow_generate_service_cpm = from(Service.*).filter(tags contain "cyborg-flow:true").cpm();
cyborg_flow_generate_service_sla = from(Service.*).filter(tags contain "cyborg-flow:true").percent(status == true);
cyborg_flow_generate_service_percentile = from(Service.latency).filter(tags contain "cyborg-flow:true").percentile(10);
cyborg_flow_generate_service_heatmap = from(Service.latency).filter(tags contain "cyborg-flow:true").histogram(100, 20);